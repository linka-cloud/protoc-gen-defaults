// Copyright 2021 Linka Cloud  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-defaults. DO NOT EDIT.

package pb

import (
	"google.golang.org/protobuf/types/known/durationpb"
	"google.golang.org/protobuf/types/known/timestamppb"
	"google.golang.org/protobuf/types/known/wrapperspb"
)

var (
	_ *timestamppb.Timestamp
	_ *durationpb.Duration
	_ *wrapperspb.BoolValue
)

func (x *Types) Default() {
	if x.Float == 0 {
		x.Float = 0.42
	}
	if x.Double == 0 {
		x.Double = 0.42
	}
	if x.Int32 == 0 {
		x.Int32 = 42
	}
	if x.Int64 == 0 {
		x.Int64 = 42
	}
	if x.Uint32 == 0 {
		x.Uint32 = 42
	}
	if x.Uint64 == 0 {
		x.Uint64 = 42
	}
	if x.Sint32 == 0 {
		x.Sint32 = 42
	}
	if x.Sint64 == 0 {
		x.Sint64 = 42
	}
	if x.Fixed32 == 0 {
		x.Fixed32 = 42
	}
	if x.Fixed64 == 0 {
		x.Fixed64 = 0
	}
	if x.Sfixed32 == 0 {
		x.Sfixed32 = 42
	}
	if x.Sfixed64 == 0 {
		x.Sfixed64 = 42
	}
	if x.Bool == false {
		x.Bool = true
	}
	if x.String_ == "" {
		x.String_ = "42"
	}
	if len(x.Bytes) == 0 {
		x.Bytes = []byte("42")
	}
	if x.Enum == 0 {
		x.Enum = 1
	}
	// Message: defaults disabled by [(defaults.value).message = {defaults: false}]
	if x.Oneof == nil {
		x.Oneof = &Types_Two{}
	}
	switch x := x.Oneof.(type) {
	case *Types_One:
		if x.One == nil {
			x.One = &OneOfOne{}
		}
		if v, ok := interface{}(x.One).(interface{ Default() }); ok && x.One != nil {
			v.Default()
		}
	case *Types_Two:
		if x.Two == nil {
			x.Two = &OneOfTwo{}
		}
		if v, ok := interface{}(x.Two).(interface{ Default() }); ok && x.Two != nil {
			v.Default()
		}
	case *Types_Three:
		if x.Three == nil {
			x.Three = &OneOfThree{}
		}
		if v, ok := interface{}(x.Three).(interface{ Default() }); ok && x.Three != nil {
			v.Default()
		}
	case *Types_Four:
		if x.Four == 0 {
			x.Four = 1
		}
	}
	if x.Duration == nil {
		x.Duration = durationpb.New(172800000000000)
	}
	if x.Timestamp == nil {
		x.Timestamp = timestamppb.Now()
	}
	if x.DoubleValue == nil {
		x.DoubleValue = &wrapperspb.DoubleValue{Value: 0.42}
	}
	if x.FloatValue == nil {
		x.FloatValue = &wrapperspb.FloatValue{Value: 0.42}
	}
	if x.Int64Value == nil {
		x.Int64Value = &wrapperspb.Int64Value{Value: 42}
	}
	if x.Uint64Value == nil {
		x.Uint64Value = &wrapperspb.UInt64Value{Value: 42}
	}
	if x.Int32Value == nil {
		x.Int32Value = &wrapperspb.Int32Value{Value: 42}
	}
	if x.Uint32Value == nil {
		x.Uint32Value = &wrapperspb.UInt32Value{Value: 42}
	}
	if x.BoolValue == nil {
		x.BoolValue = &wrapperspb.BoolValue{Value: false}
	}
	if x.StringValue == nil {
		x.StringValue = &wrapperspb.StringValue{Value: "42"}
	}
	if x.BytesValue == nil {
		x.BytesValue = &wrapperspb.BytesValue{Value: []byte("42")}
	}
}

func (x *Message) Default() {
	if x.Field == "" {
		x.Field = "lonely field"
	}
}

func (x *OneOfTwo) Default() {
	if x.StringField == "" {
		x.StringField = "string_field"
	}
}

func (x *OneOfThree) Default() {
}
