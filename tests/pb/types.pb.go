// Copyright 2021 Linka Cloud  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: tests/pb/types.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"

	_ "go.linka.cloud/protoc-gen-defaults/defaults"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Complex Field Types
type Types_Enum int32

const (
	Types_NONE Types_Enum = 0
	Types_ONE  Types_Enum = 1
	Types_TWO  Types_Enum = 2
)

// Enum value maps for Types_Enum.
var (
	Types_Enum_name = map[int32]string{
		0: "NONE",
		1: "ONE",
		2: "TWO",
	}
	Types_Enum_value = map[string]int32{
		"NONE": 0,
		"ONE":  1,
		"TWO":  2,
	}
)

func (x Types_Enum) Enum() *Types_Enum {
	p := new(Types_Enum)
	*p = x
	return p
}

func (x Types_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Types_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_tests_pb_types_proto_enumTypes[0].Descriptor()
}

func (Types_Enum) Type() protoreflect.EnumType {
	return &file_tests_pb_types_proto_enumTypes[0]
}

func (x Types_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Types_Enum.Descriptor instead.
func (Types_Enum) EnumDescriptor() ([]byte, []int) {
	return file_tests_pb_types_proto_rawDescGZIP(), []int{0, 0}
}

type Types struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Scalar Field Types
	Float    float32    `protobuf:"fixed32,1,opt,name=float,proto3" json:"float,omitempty"`
	Double   float64    `protobuf:"fixed64,2,opt,name=double,proto3" json:"double,omitempty"`
	Int32    int32      `protobuf:"varint,3,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64    int64      `protobuf:"varint,4,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32   uint32     `protobuf:"varint,5,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64   uint64     `protobuf:"varint,6,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32   int32      `protobuf:"zigzag32,7,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64   int64      `protobuf:"zigzag64,8,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32  uint32     `protobuf:"fixed32,9,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64  uint64     `protobuf:"fixed64,10,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32 int32      `protobuf:"fixed32,11,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64 int64      `protobuf:"fixed64,12,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool     bool       `protobuf:"varint,13,opt,name=bool,proto3" json:"bool,omitempty"`
	String_  string     `protobuf:"bytes,14,opt,name=string,proto3" json:"string,omitempty"`
	Bytes    []byte     `protobuf:"bytes,15,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Enum     Types_Enum `protobuf:"varint,16,opt,name=enum,proto3,enum=tests.Types_Enum" json:"enum,omitempty"`
	Message  *Message   `protobuf:"bytes,17,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are assignable to Oneof:
	//
	//	*Types_One
	//	*Types_Two
	//	*Types_Three
	//	*Types_Four
	Oneof isTypes_Oneof `protobuf_oneof:"oneof"`
	// WellKnow types
	Duration    *durationpb.Duration    `protobuf:"bytes,18,opt,name=duration,proto3" json:"duration,omitempty"`
	Timestamp   *timestamppb.Timestamp  `protobuf:"bytes,19,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DoubleValue *wrapperspb.DoubleValue `protobuf:"bytes,20,opt,name=double_value,json=doubleValue,proto3" json:"double_value,omitempty"`
	FloatValue  *wrapperspb.FloatValue  `protobuf:"bytes,21,opt,name=float_value,json=floatValue,proto3" json:"float_value,omitempty"`
	Int64Value  *wrapperspb.Int64Value  `protobuf:"bytes,22,opt,name=int64_value,json=int64Value,proto3" json:"int64_value,omitempty"`
	Uint64Value *wrapperspb.UInt64Value `protobuf:"bytes,23,opt,name=uint64_value,json=uint64Value,proto3" json:"uint64_value,omitempty"`
	Int32Value  *wrapperspb.Int32Value  `protobuf:"bytes,24,opt,name=int32_value,json=int32Value,proto3" json:"int32_value,omitempty"`
	Uint32Value *wrapperspb.UInt32Value `protobuf:"bytes,25,opt,name=uint32_value,json=uint32Value,proto3" json:"uint32_value,omitempty"`
	BoolValue   *wrapperspb.BoolValue   `protobuf:"bytes,26,opt,name=bool_value,json=boolValue,proto3" json:"bool_value,omitempty"`
	StringValue *wrapperspb.StringValue `protobuf:"bytes,27,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	BytesValue  *wrapperspb.BytesValue  `protobuf:"bytes,28,opt,name=bytes_value,json=bytesValue,proto3" json:"bytes_value,omitempty"`
}

func (x *Types) Reset() {
	*x = Types{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_pb_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Types) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Types) ProtoMessage() {}

func (x *Types) ProtoReflect() protoreflect.Message {
	mi := &file_tests_pb_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Types.ProtoReflect.Descriptor instead.
func (*Types) Descriptor() ([]byte, []int) {
	return file_tests_pb_types_proto_rawDescGZIP(), []int{0}
}

func (x *Types) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *Types) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *Types) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *Types) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *Types) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *Types) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *Types) GetSint32() int32 {
	if x != nil {
		return x.Sint32
	}
	return 0
}

func (x *Types) GetSint64() int64 {
	if x != nil {
		return x.Sint64
	}
	return 0
}

func (x *Types) GetFixed32() uint32 {
	if x != nil {
		return x.Fixed32
	}
	return 0
}

func (x *Types) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *Types) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *Types) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (x *Types) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *Types) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *Types) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *Types) GetEnum() Types_Enum {
	if x != nil {
		return x.Enum
	}
	return Types_NONE
}

func (x *Types) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (m *Types) GetOneof() isTypes_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (x *Types) GetOne() *OneOfOne {
	if x, ok := x.GetOneof().(*Types_One); ok {
		return x.One
	}
	return nil
}

func (x *Types) GetTwo() *OneOfTwo {
	if x, ok := x.GetOneof().(*Types_Two); ok {
		return x.Two
	}
	return nil
}

func (x *Types) GetThree() *OneOfThree {
	if x, ok := x.GetOneof().(*Types_Three); ok {
		return x.Three
	}
	return nil
}

func (x *Types) GetFour() Types_Enum {
	if x, ok := x.GetOneof().(*Types_Four); ok {
		return x.Four
	}
	return Types_NONE
}

func (x *Types) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Types) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Types) GetDoubleValue() *wrapperspb.DoubleValue {
	if x != nil {
		return x.DoubleValue
	}
	return nil
}

func (x *Types) GetFloatValue() *wrapperspb.FloatValue {
	if x != nil {
		return x.FloatValue
	}
	return nil
}

func (x *Types) GetInt64Value() *wrapperspb.Int64Value {
	if x != nil {
		return x.Int64Value
	}
	return nil
}

func (x *Types) GetUint64Value() *wrapperspb.UInt64Value {
	if x != nil {
		return x.Uint64Value
	}
	return nil
}

func (x *Types) GetInt32Value() *wrapperspb.Int32Value {
	if x != nil {
		return x.Int32Value
	}
	return nil
}

func (x *Types) GetUint32Value() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Uint32Value
	}
	return nil
}

func (x *Types) GetBoolValue() *wrapperspb.BoolValue {
	if x != nil {
		return x.BoolValue
	}
	return nil
}

func (x *Types) GetStringValue() *wrapperspb.StringValue {
	if x != nil {
		return x.StringValue
	}
	return nil
}

func (x *Types) GetBytesValue() *wrapperspb.BytesValue {
	if x != nil {
		return x.BytesValue
	}
	return nil
}

type isTypes_Oneof interface {
	isTypes_Oneof()
}

type Types_One struct {
	One *OneOfOne `protobuf:"bytes,29,opt,name=one,proto3,oneof"`
}

type Types_Two struct {
	Two *OneOfTwo `protobuf:"bytes,30,opt,name=two,proto3,oneof"`
}

type Types_Three struct {
	Three *OneOfThree `protobuf:"bytes,31,opt,name=three,proto3,oneof"`
}

type Types_Four struct {
	Four Types_Enum `protobuf:"varint,32,opt,name=four,proto3,enum=tests.Types_Enum,oneof"`
}

func (*Types_One) isTypes_Oneof() {}

func (*Types_Two) isTypes_Oneof() {}

func (*Types_Three) isTypes_Oneof() {}

func (*Types_Four) isTypes_Oneof() {}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_pb_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_tests_pb_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_tests_pb_types_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

type OneOfOne struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringField string `protobuf:"bytes,1,opt,name=string_field,json=stringField,proto3" json:"string_field,omitempty"`
}

func (x *OneOfOne) Reset() {
	*x = OneOfOne{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_pb_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneOfOne) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneOfOne) ProtoMessage() {}

func (x *OneOfOne) ProtoReflect() protoreflect.Message {
	mi := &file_tests_pb_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneOfOne.ProtoReflect.Descriptor instead.
func (*OneOfOne) Descriptor() ([]byte, []int) {
	return file_tests_pb_types_proto_rawDescGZIP(), []int{2}
}

func (x *OneOfOne) GetStringField() string {
	if x != nil {
		return x.StringField
	}
	return ""
}

type OneOfTwo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringField string `protobuf:"bytes,1,opt,name=string_field,json=stringField,proto3" json:"string_field,omitempty"`
}

func (x *OneOfTwo) Reset() {
	*x = OneOfTwo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_pb_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneOfTwo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneOfTwo) ProtoMessage() {}

func (x *OneOfTwo) ProtoReflect() protoreflect.Message {
	mi := &file_tests_pb_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneOfTwo.ProtoReflect.Descriptor instead.
func (*OneOfTwo) Descriptor() ([]byte, []int) {
	return file_tests_pb_types_proto_rawDescGZIP(), []int{3}
}

func (x *OneOfTwo) GetStringField() string {
	if x != nil {
		return x.StringField
	}
	return ""
}

type OneOfThree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringField string `protobuf:"bytes,1,opt,name=string_field,json=stringField,proto3" json:"string_field,omitempty"`
}

func (x *OneOfThree) Reset() {
	*x = OneOfThree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_pb_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneOfThree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneOfThree) ProtoMessage() {}

func (x *OneOfThree) ProtoReflect() protoreflect.Message {
	mi := &file_tests_pb_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneOfThree.ProtoReflect.Descriptor instead.
func (*OneOfThree) Descriptor() ([]byte, []int) {
	return file_tests_pb_types_proto_rawDescGZIP(), []int{4}
}

func (x *OneOfThree) GetStringField() string {
	if x != nil {
		return x.StringField
	}
	return ""
}

var File_tests_pb_types_proto protoreflect.FileDescriptor

var file_tests_pb_types_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x17, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x0c, 0x0a, 0x05, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x42, 0x08, 0x9a, 0x49, 0x05, 0x0d, 0x3d, 0x0a, 0xd7, 0x3e, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x12, 0x24, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x42, 0x0c, 0x9a, 0x49, 0x09, 0x11, 0xe1, 0x7a, 0x14, 0xae, 0x47, 0xe1, 0xda, 0x3f, 0x52,
	0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x05, 0x9a, 0x49, 0x02, 0x18, 0x2a, 0x52, 0x05, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x12, 0x1b, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x05, 0x9a, 0x49, 0x02, 0x20, 0x2a, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x1d, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x05, 0x9a, 0x49, 0x02, 0x28, 0x2a, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x1d, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x05, 0x9a, 0x49, 0x02, 0x30, 0x2a, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12,
	0x1d, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x42,
	0x05, 0x9a, 0x49, 0x02, 0x38, 0x54, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1d,
	0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x42, 0x05,
	0x9a, 0x49, 0x02, 0x40, 0x54, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x22, 0x0a,
	0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x42, 0x08,
	0x9a, 0x49, 0x05, 0x4d, 0x2a, 0x00, 0x00, 0x00, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x12, 0x26, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x06, 0x42, 0x0c, 0x9a, 0x49, 0x09, 0x51, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x24, 0x0a, 0x08, 0x73, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x42, 0x08, 0x9a, 0x49, 0x05,
	0x5d, 0x2a, 0x00, 0x00, 0x00, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12,
	0x28, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x10, 0x42, 0x0c, 0x9a, 0x49, 0x09, 0x61, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52,
	0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x19, 0x0a, 0x04, 0x62, 0x6f, 0x6f,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x42, 0x05, 0x9a, 0x49, 0x02, 0x68, 0x01, 0x52, 0x04,
	0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0x9a, 0x49, 0x04, 0x72, 0x02, 0x34, 0x32, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0x9a, 0x49, 0x04, 0x7a, 0x02, 0x34, 0x32, 0x52, 0x05, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x06, 0x9a, 0x49, 0x03, 0x80, 0x01, 0x01, 0x52, 0x04, 0x65,
	0x6e, 0x75, 0x6d, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x0a, 0x9a, 0x49, 0x07, 0x8a, 0x01, 0x04, 0x08, 0x01, 0x10, 0x00,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x6f, 0x6e, 0x65,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x4f,
	0x6e, 0x65, 0x4f, 0x66, 0x4f, 0x6e, 0x65, 0x42, 0x0a, 0x9a, 0x49, 0x07, 0x8a, 0x01, 0x04, 0x08,
	0x01, 0x10, 0x01, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x74, 0x77,
	0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x54, 0x77, 0x6f, 0x42, 0x0a, 0x9a, 0x49, 0x07, 0x8a, 0x01, 0x04,
	0x08, 0x01, 0x10, 0x01, 0x48, 0x00, 0x52, 0x03, 0x74, 0x77, 0x6f, 0x12, 0x35, 0x0a, 0x05, 0x74,
	0x68, 0x72, 0x65, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x54, 0x68, 0x72, 0x65, 0x65, 0x42, 0x0a, 0x9a,
	0x49, 0x07, 0x8a, 0x01, 0x04, 0x08, 0x01, 0x10, 0x01, 0x48, 0x00, 0x52, 0x05, 0x74, 0x68, 0x72,
	0x65, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x6f, 0x75, 0x72, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x42, 0x06, 0x9a, 0x49, 0x03, 0x80, 0x01, 0x01, 0x48, 0x00, 0x52, 0x04, 0x66,
	0x6f, 0x75, 0x72, 0x12, 0x3f, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x08, 0x9a, 0x49, 0x05, 0xaa, 0x01, 0x02, 0x32, 0x64, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x09, 0x9a, 0x49, 0x06, 0xb2, 0x01, 0x03, 0x6e, 0x6f, 0x77, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x4d, 0x0a, 0x0c, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0x9a,
	0x49, 0x09, 0x11, 0xe1, 0x7a, 0x14, 0xae, 0x47, 0xe1, 0xda, 0x3f, 0x52, 0x0b, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0x9a, 0x49, 0x05, 0x0d,
	0x3d, 0x0a, 0xd7, 0x3e, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x43, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x05, 0x9a, 0x49, 0x02, 0x20, 0x2a, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x05, 0x9a, 0x49, 0x02, 0x30, 0x2a,
	0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x43, 0x0a,
	0x0b, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x05, 0x9a, 0x49, 0x02, 0x18, 0x2a, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x05, 0x9a, 0x49, 0x02, 0x28, 0x2a, 0x52, 0x0b, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x62, 0x6f,
	0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x05, 0x9a, 0x49, 0x02, 0x68,
	0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x48, 0x0a, 0x0c,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x07, 0x9a, 0x49, 0x04, 0x72, 0x02, 0x34, 0x32, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x9a, 0x49, 0x04, 0x7a, 0x02, 0x34,
	0x32, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a,
	0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x57, 0x4f, 0x10,
	0x02, 0x42, 0x0f, 0x0a, 0x05, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x06, 0x9a, 0x49, 0x03, 0x74,
	0x77, 0x6f, 0x22, 0x32, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a,
	0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x9a, 0x49,
	0x0e, 0x72, 0x0c, 0x6c, 0x6f, 0x6e, 0x65, 0x6c, 0x79, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x45, 0x0a, 0x08, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x4f,
	0x6e, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x9a, 0x49, 0x0e, 0x72, 0x0c, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0b, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x3a, 0x03, 0xa0, 0x49, 0x01, 0x22, 0x40, 0x0a,
	0x08, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x54, 0x77, 0x6f, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0x9a, 0x49, 0x0e, 0x72, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22,
	0x47, 0x0a, 0x0a, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x54, 0x68, 0x72, 0x65, 0x65, 0x12, 0x34, 0x0a,
	0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x11, 0x9a, 0x49, 0x0e, 0x72, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x3a, 0x03, 0x98, 0x49, 0x01, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x6f, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x61, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2f, 0x74,
	0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_tests_pb_types_proto_rawDescOnce sync.Once
	file_tests_pb_types_proto_rawDescData = file_tests_pb_types_proto_rawDesc
)

func file_tests_pb_types_proto_rawDescGZIP() []byte {
	file_tests_pb_types_proto_rawDescOnce.Do(func() {
		file_tests_pb_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_tests_pb_types_proto_rawDescData)
	})
	return file_tests_pb_types_proto_rawDescData
}

var file_tests_pb_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tests_pb_types_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tests_pb_types_proto_goTypes = []interface{}{
	(Types_Enum)(0),                // 0: tests.Types.Enum
	(*Types)(nil),                  // 1: tests.Types
	(*Message)(nil),                // 2: tests.Message
	(*OneOfOne)(nil),               // 3: tests.OneOfOne
	(*OneOfTwo)(nil),               // 4: tests.OneOfTwo
	(*OneOfThree)(nil),             // 5: tests.OneOfThree
	(*durationpb.Duration)(nil),    // 6: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),  // 7: google.protobuf.Timestamp
	(*wrapperspb.DoubleValue)(nil), // 8: google.protobuf.DoubleValue
	(*wrapperspb.FloatValue)(nil),  // 9: google.protobuf.FloatValue
	(*wrapperspb.Int64Value)(nil),  // 10: google.protobuf.Int64Value
	(*wrapperspb.UInt64Value)(nil), // 11: google.protobuf.UInt64Value
	(*wrapperspb.Int32Value)(nil),  // 12: google.protobuf.Int32Value
	(*wrapperspb.UInt32Value)(nil), // 13: google.protobuf.UInt32Value
	(*wrapperspb.BoolValue)(nil),   // 14: google.protobuf.BoolValue
	(*wrapperspb.StringValue)(nil), // 15: google.protobuf.StringValue
	(*wrapperspb.BytesValue)(nil),  // 16: google.protobuf.BytesValue
}
var file_tests_pb_types_proto_depIdxs = []int32{
	0,  // 0: tests.Types.enum:type_name -> tests.Types.Enum
	2,  // 1: tests.Types.message:type_name -> tests.Message
	3,  // 2: tests.Types.one:type_name -> tests.OneOfOne
	4,  // 3: tests.Types.two:type_name -> tests.OneOfTwo
	5,  // 4: tests.Types.three:type_name -> tests.OneOfThree
	0,  // 5: tests.Types.four:type_name -> tests.Types.Enum
	6,  // 6: tests.Types.duration:type_name -> google.protobuf.Duration
	7,  // 7: tests.Types.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 8: tests.Types.double_value:type_name -> google.protobuf.DoubleValue
	9,  // 9: tests.Types.float_value:type_name -> google.protobuf.FloatValue
	10, // 10: tests.Types.int64_value:type_name -> google.protobuf.Int64Value
	11, // 11: tests.Types.uint64_value:type_name -> google.protobuf.UInt64Value
	12, // 12: tests.Types.int32_value:type_name -> google.protobuf.Int32Value
	13, // 13: tests.Types.uint32_value:type_name -> google.protobuf.UInt32Value
	14, // 14: tests.Types.bool_value:type_name -> google.protobuf.BoolValue
	15, // 15: tests.Types.string_value:type_name -> google.protobuf.StringValue
	16, // 16: tests.Types.bytes_value:type_name -> google.protobuf.BytesValue
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_tests_pb_types_proto_init() }
func file_tests_pb_types_proto_init() {
	if File_tests_pb_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tests_pb_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Types); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_pb_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_pb_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneOfOne); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_pb_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneOfTwo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_pb_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneOfThree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tests_pb_types_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Types_One)(nil),
		(*Types_Two)(nil),
		(*Types_Three)(nil),
		(*Types_Four)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tests_pb_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tests_pb_types_proto_goTypes,
		DependencyIndexes: file_tests_pb_types_proto_depIdxs,
		EnumInfos:         file_tests_pb_types_proto_enumTypes,
		MessageInfos:      file_tests_pb_types_proto_msgTypes,
	}.Build()
	File_tests_pb_types_proto = out.File
	file_tests_pb_types_proto_rawDesc = nil
	file_tests_pb_types_proto_goTypes = nil
	file_tests_pb_types_proto_depIdxs = nil
}
